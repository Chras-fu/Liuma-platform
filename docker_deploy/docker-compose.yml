version: "3"
services:
  # WEB
  nginx:
    container_name: liuma_nginx
    # 引用的镜像
    image: nginx
    # 映射端口, 宿主机：容器内
    ports:
      - 90:80
    # 挂载目录, 宿主机：容器内
    volumes:
      - ./nginx/conf/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/data/dist:/usr/share/nginx/data
      - ./nginx/log:/var/log/nginx
    # 链接到其它服务中的容器，服务名称Container-name:服务别名Alias
    # 比如nginx proxy_pass需要转发到server的8080，则写 proxy_pass http://serverHost:8080;
    # 设置网络模式, 引用同一个network
    networks:
      - backend
    # 总是重启
    restart: "always"
    # 解决容器的依赖、启动先后的问题，优先启动mysql、server
    depends_on:
      - mysql
      - server

  # 数据库
  mysql:
    container_name: liuma_mysql
    # 镜像
    image: mysql:8.0
    # 映射端口, 宿主机：容器内
    ports:
      - 3400:3306
    # 挂载目录, 宿主机：容器内
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    environment:
        MYSQL_DATABASE: liuma         
        MYSQL_ROOT_PASSWORD: 123456     
        MYSQL_ROOT_HOST: '%'
    restart: "always"
    # 设置网络模式, 引用同一个network
    networks:
      - backend

  # server
  server:
    container_name: liuma_server
    # 引用的镜像
    image: java:8-alpine
    # 映射端口, 宿主机：容器内
    ports:
      - 8100:8080
    # 挂载目录, 宿主机：容器内
    volumes:
      - ./springboot:/home
    # 启动容器后执行的命令
    entrypoint: sh /home/start_server.sh 
    restart: "always"
    # 设置网络模式, 引用同一个network   
    networks:
      - backend
    # 等同于docker run -it, 否则执行完会自动退出
    stdin_open: true
    tty: true
    depends_on:
      - mysql


# 设置网络模式
networks:
  backend:
    driver: bridge
