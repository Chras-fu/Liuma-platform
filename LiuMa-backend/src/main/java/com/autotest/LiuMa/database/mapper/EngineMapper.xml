<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotest.LiuMa.database.mapper.EngineMapper">
  <insert id="saveEngine" parameterType="com.autotest.LiuMa.database.domain.Engine">
    insert into engine (id, name, engine_type, secret, status, project_id, create_time, update_time, create_user, update_user)
    values (#{id}, #{name}, #{engineType}, #{secret}, #{status}, #{projectId}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
  </insert>
  <update id="updateStatus" parameterType="java.lang.String">
    update engine set status=#{status} where id =#{id}
  </update>
  <update id="updateHeartbeat">
    update engine set last_heartbeat_time=#{time} where id =#{id}
  </update>
  <update id="updateLostHeartbeatEngine" parameterType="java.lang.Long">
    update engine set status='offline' where (last_heartbeat_time &lt; #{minLastHeartbeatTime} or ISNULL(last_heartbeat_time)) and status!='offline'
  </update>
  <select id="getEngineByName" parameterType="java.lang.String" resultType="com.autotest.LiuMa.database.domain.Engine">
    select * from engine where project_id = #{projectId} and name = #{name}
  </select>
  <select id="getEngineById" parameterType="java.lang.String" resultType="com.autotest.LiuMa.dto.EngineDTO">
    select * from engine where id = #{id}
  </select>
  <select id="getAllCustomEngine" parameterType="java.lang.String" resultType="com.autotest.LiuMa.database.domain.Engine">
    select * from engine where project_id = #{projectId} and engine_type = 'custom' and status != 'offline'
  </select>
  <select id="getAllSystemEngine" parameterType="java.lang.String" resultType="com.autotest.LiuMa.database.domain.Engine">
    select * from engine where engine_type = 'system' and status != 'offline'
  </select>
  <select id="getEngineList" parameterType="java.lang.String" resultType="com.autotest.LiuMa.dto.EngineDTO">
    select eng.id, eng.name, eng.engine_type, eng.status, eng.project_id, eng.create_time, eng.update_time,
    eng.create_user, eng.update_user, u.username as username
    from engine eng left join user u on u.id = eng.create_user
    where (eng.project_id = #{projectId} or eng.engine_type = 'system')
    <if test="condition != null and condition != ''">
      and eng.name like #{condition}
    </if>
    order by eng.engine_type desc, eng.create_time desc
  </select>
  <delete id="deleteEngine" parameterType="java.lang.String">
    delete from engine where id = #{id}
  </delete>
</mapper>