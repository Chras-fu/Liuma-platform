<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.autotest.LiuMa.database.mapper.DomainMapper">
  <insert id="saveDomain" parameterType="com.autotest.LiuMa.database.domain.Domain">
    insert into domain (id, domain_key_type, domain_key, domain_data, environment_id, create_time, update_time, create_user, update_user)
    values (#{id}, #{domainKeyType}, #{domainKey}, #{domainData}, #{environmentId}, #{createTime}, #{updateTime}, #{createUser}, #{updateUser})
    ON DUPLICATE KEY UPDATE
    update_time = #{updateTime}, update_user = #{updateUser}
    <if test="domainKeyType != null and domainKeyType != ''">
      ,domain_key_type = #{domainKeyType}
    </if>
    <if test="domainKey != null and domainKey != ''">
      ,domain_key = #{domainKey}
    </if>
    <if test="domainData != null and domainData != ''">
      ,domain_data = #{domainData}
    </if>
  </insert>
  <select id="getDomainByName" parameterType="java.lang.String" resultType="com.autotest.LiuMa.database.domain.Domain">
    select * from domain where environment_id = #{environmentId} and domain_key = #{domainKey}
  </select>
  <select id="getPathDomainList" parameterType="java.lang.String" resultType="com.autotest.LiuMa.database.domain.Domain">
    select * from domain where environment_id = #{environmentId} and domain_key_type = 'path'
  </select>
  <select id="getDomainList" parameterType="java.lang.String" resultType="com.autotest.LiuMa.dto.DomainDTO">
    select dom.id, dom.domain_key_type, dom.domain_key, dom.domain_data, dom.environment_id, dom.create_time, dom.update_time,
    dom.create_user, dom.update_user, ds.name as DomainSignName
    from domain dom left join domain_sign ds on ds.id = dom.domain_key
    where dom.environment_id = #{environmentId} order by dom.create_time desc
  </select>
  <delete id="deleteDomain" parameterType="java.lang.String">
    delete from domain where id = #{id}
  </delete>
</mapper>